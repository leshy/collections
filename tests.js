// Generated by CoffeeScript 1.4.0
(function() {
  var collections, mongo;

  collections = require('./collections');

  mongo = require('./serverside/mongodb');

  exports.mongo = {
    setUp: function(callback) {
      this.mongo = require('mongodb');
      this.collection = mongo.MongoCollection.extend4000(collections.ReferenceMixin, collections.ModelMixin);
      this.db = new this.mongo.Db('testdb', new this.mongo.Server('localhost', 27017), {
        safe: true
      });
      this.db.open(callback);
      return this.c = new this.collection({
        db: this.db,
        collection: 'test'
      });
    },
    tearDown: function(callback) {
      this.db.close();
      return callback();
    },
    basics: function(test) {
      var a, model,
        _this = this;
      model = this.c.defineModel('testmodel', {
        bla: 3
      });
      a = new model();
      a.set({
        something: 666
      });
      return a.flush(function() {
        return _this.c.findModel({
          id: a.id
        }, function(err, model) {
          test.equals(model.get('something'), 666);
          return model.del(function() {
            return _this.c.findModel({
              id: a.id
            }, function(err, model) {
              test.equals(model, void 0);
              return test.done();
            });
          });
        });
      });
    }
  };

}).call(this);
